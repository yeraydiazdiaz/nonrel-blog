[{"pk": 6683931185250304, "model": "contenttypes.contenttype", "fields": {"model": "author", "name": "author", "app_label": "blog"}}, {"pk": 5558031278407680, "model": "contenttypes.contenttype", "fields": {"model": "comment", "name": "comment", "app_label": "blog"}}, {"pk": 6015428115562496, "model": "contenttypes.contenttype", "fields": {"model": "contenttype", "name": "content type", "app_label": "contenttypes"}}, {"pk": 6437640580628480, "model": "contenttypes.contenttype", "fields": {"model": "group", "name": "group", "app_label": "auth"}}, {"pk": 5733953138851840, "model": "contenttypes.contenttype", "fields": {"model": "logentry", "name": "log entry", "app_label": "admin"}}, {"pk": 5311740673785856, "model": "contenttypes.contenttype", "fields": {"model": "permission", "name": "permission", "app_label": "auth"}}, {"pk": 6120981231828992, "model": "contenttypes.contenttype", "fields": {"model": "post", "name": "post", "app_label": "blog"}}, {"pk": 5839506255118336, "model": "contenttypes.contenttype", "fields": {"model": "relationindex_blog_post_search_index", "name": "relation index_blog_ post_search_index", "app_label": "search"}}, {"pk": 5980243743473664, "model": "contenttypes.contenttype", "fields": {"model": "session", "name": "session", "app_label": "sessions"}}, {"pk": 5874690627207168, "model": "contenttypes.contenttype", "fields": {"model": "user", "name": "user", "app_label": "auth"}}, {"pk": 4924712580808704, "model": "auth.permission", "fields": {"codename": "add_author", "name": "Can add author", "content_type": 6683931185250304}}, {"pk": 5769137510940672, "model": "auth.permission", "fields": {"codename": "add_comment", "name": "Can add comment", "content_type": 5558031278407680}}, {"pk": 6578378068983808, "model": "auth.permission", "fields": {"codename": "add_contenttype", "name": "Can add content type", "content_type": 6015428115562496}}, {"pk": 6261718720184320, "model": "auth.permission", "fields": {"codename": "add_group", "name": "Can add group", "content_type": 6437640580628480}}, {"pk": 5171003185430528, "model": "auth.permission", "fields": {"codename": "add_logentry", "name": "Can add log entry", "content_type": 5733953138851840}}, {"pk": 4854343836631040, "model": "auth.permission", "fields": {"codename": "add_permission", "name": "Can add permission", "content_type": 5311740673785856}}, {"pk": 6613562441072640, "model": "auth.permission", "fields": {"codename": "add_post", "name": "Can add post", "content_type": 6120981231828992}}, {"pk": 6402456208539648, "model": "auth.permission", "fields": {"codename": "add_relationindex_blog_post_search_index", "name": "Can add relation index_blog_ post_search_index", "content_type": 5839506255118336}}, {"pk": 5417293790052352, "model": "auth.permission", "fields": {"codename": "add_session", "name": "Can add session", "content_type": 5980243743473664}}, {"pk": 5030265697075200, "model": "auth.permission", "fields": {"codename": "add_user", "name": "Can add user", "content_type": 5874690627207168}}, {"pk": 6050612487651328, "model": "auth.permission", "fields": {"codename": "change_author", "name": "Can change author", "content_type": 6683931185250304}}, {"pk": 5487662534230016, "model": "auth.permission", "fields": {"codename": "change_comment", "name": "Can change comment", "content_type": 5558031278407680}}, {"pk": 4748790720364544, "model": "auth.permission", "fields": {"codename": "change_contenttype", "name": "Can change content type", "content_type": 6015428115562496}}, {"pk": 5135818813341696, "model": "auth.permission", "fields": {"codename": "change_group", "name": "Can change group", "content_type": 6437640580628480}}, {"pk": 4889528208719872, "model": "auth.permission", "fields": {"codename": "change_logentry", "name": "Can change log entry", "content_type": 5733953138851840}}, {"pk": 6156165603917824, "model": "auth.permission", "fields": {"codename": "change_permission", "name": "Can change permission", "content_type": 5311740673785856}}, {"pk": 4643237604098048, "model": "auth.permission", "fields": {"codename": "change_post", "name": "Can change post", "content_type": 6120981231828992}}, {"pk": 4995081324986368, "model": "auth.permission", "fields": {"codename": "change_relationindex_blog_post_search_index", "name": "Can change relation index_blog_ post_search_index", "content_type": 5839506255118336}}, {"pk": 4713606348275712, "model": "auth.permission", "fields": {"codename": "change_session", "name": "Can change session", "content_type": 5980243743473664}}, {"pk": 4572868859920384, "model": "auth.permission", "fields": {"codename": "change_user", "name": "Can change user", "content_type": 5874690627207168}}, {"pk": 4783975092453376, "model": "auth.permission", "fields": {"codename": "delete_author", "name": "Can delete author", "content_type": 6683931185250304}}, {"pk": 6332087464361984, "model": "auth.permission", "fields": {"codename": "delete_comment", "name": "Can delete comment", "content_type": 5558031278407680}}, {"pk": 5452478162141184, "model": "auth.permission", "fields": {"codename": "delete_contenttype", "name": "Can delete content type", "content_type": 6015428115562496}}, {"pk": 6719115557339136, "model": "auth.permission", "fields": {"codename": "delete_group", "name": "Can delete group", "content_type": 6437640580628480}}, {"pk": 6296903092273152, "model": "auth.permission", "fields": {"codename": "delete_logentry", "name": "Can delete log entry", "content_type": 5733953138851840}}, {"pk": 5593215650496512, "model": "auth.permission", "fields": {"codename": "delete_permission", "name": "Can delete permission", "content_type": 5311740673785856}}, {"pk": 5206187557519360, "model": "auth.permission", "fields": {"codename": "delete_post", "name": "Can delete post", "content_type": 6120981231828992}}, {"pk": 5276556301697024, "model": "auth.permission", "fields": {"codename": "delete_relationindex_blog_post_search_index", "name": "Can delete relation index_blog_ post_search_index", "content_type": 5839506255118336}}, {"pk": 6543193696894976, "model": "auth.permission", "fields": {"codename": "delete_session", "name": "Can delete session", "content_type": 5980243743473664}}, {"pk": 5698768766763008, "model": "auth.permission", "fields": {"codename": "delete_user", "name": "Can delete user", "content_type": 5874690627207168}}, {"pk": 5747559595245568, "model": "auth.user", "fields": {"username": "foo1", "first_name": "", "last_name": "", "is_active": true, "idxf_email_l_iexact": "", "idxf_username_l_iexact": "foo1", "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T15:28:43.062", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$10000$ScF209DNGQqw$vgP8r+rKOa3VG8ca+r8Z9IVAISvellLQ0HmDabkxq9Q=", "email": "", "date_joined": "2014-01-12T15:28:42.211"}}, {"pk": 5785905063264256, "model": "auth.user", "fields": {"username": "yeraydiazdiaz", "first_name": "", "last_name": "", "is_active": true, "idxf_email_l_iexact": "", "idxf_username_l_iexact": "yeraydiazdiaz", "is_superuser": false, "is_staff": false, "last_login": "2014-02-09T16:51:12.445", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$10000$uC4wQCt52syl$KjbBquF/0QLhAvCL0CPoatB1ixPNjsn0E1j12j55PzU=", "email": "", "date_joined": "2014-01-01T18:18:04.047"}}, {"pk": "8088e41887fb883f1ee436b8247d855d", "model": "sessions.session", "fields": {"expire_date": "2014-01-15T20:10:31.361", "session_data": "ZDU5ZWVjNDM1MmQzYmM5ZDMyNmU4MDc0ZjVlMWM4MzIxOTFiYTYyNDqAAn1xAChVEl9hdXRoX3Vz\nZXJfYmFja2VuZHEBVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZHEC\nVQ1fYXV0aF91c2VyX2lkcQOKBwAAAABAdxV1Lg==\n"}}, {"pk": "96630ee524af3b0d953fffbe233c3a50", "model": "sessions.session", "fields": {"expire_date": "2014-02-23T16:51:12.456", "session_data": "NGVhZWE0YjllZDE3NzFhNWY1MTUzMDliNmVlZGMyYmM2YzQxY2RiMDqAAn1xAChVEl9hdXRoX3Vz\nZXJfYmFja2VuZHEBVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZHEC\nVQ1fYXV0aF91c2VyX2lkcQOKBwAAAABAjhR1Lg==\n"}}, {"pk": "9773850edd413fd953d1118ea614adc3", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T15:28:47.026", "session_data": "NDk0OTZlN2I2NGZkYjFmMzU2NTg4NjlkYzE4MWM3N2VkNGYyY2UwNjqAAn1xAC4=\n"}}, {"pk": "aada58fedf42984d8ae591d73c6cb24a", "model": "sessions.session", "fields": {"expire_date": "2014-01-15T20:30:38.911", "session_data": "NDk0OTZlN2I2NGZkYjFmMzU2NTg4NjlkYzE4MWM3N2VkNGYyY2UwNjqAAn1xAC4=\n"}}, {"pk": "c2ab292da57dc06ee8f154a1d945a337", "model": "sessions.session", "fields": {"expire_date": "2014-02-21T16:23:42.111", "session_data": "NGVhZWE0YjllZDE3NzFhNWY1MTUzMDliNmVlZGMyYmM2YzQxY2RiMDqAAn1xAChVEl9hdXRoX3Vz\nZXJfYmFja2VuZHEBVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZHEC\nVQ1fYXV0aF91c2VyX2lkcQOKBwAAAABAjhR1Lg==\n"}}, {"pk": 4876402788663296, "model": "search.relationindex_blog_post_search_index", "fields": {"permalink": "Django_REST_Framework", "user_id": 5785905063264256, "tags": ["django"], "text": "Django REST framework is a powerful and flexible toolkit that makes it easy to build Web APIs.\n\nSome reasons you might want to use REST framework:\n\n    The Web browseable API is a huge usability win for your developers.\n    Authentication policies including OAuth1a and OAuth2 out of the box.\n    Serialization that supports both ORM and non-ORM data sources.\n    Customizable all the way down - just use regular function-based views if you don't need the more powerful features.\n    Extensive documentation, and great community support.\n    Used and trusted by large companies such as Mozilla and Eventbrite.\n", "title": "Django REST Framework", "comments": null, "search_index_search_list_field": ["framework", "rest", "django", "and", "all", "featur", "just", "reason", "win", "is", "some", "toolkit", "rest", "down", "sourc", "as", "api", "includ", "want", "such", "need", "support", "your", "trust", "out", "browseabl", "web", "use", "for", "view", "api", "by", "to", "authent", "build", "easi", "flexibl", "you", "develop", "might", "more", "box", "use", "way", "that", "eventbrit", "power", "mozilla", "support", "it", "framework", "orm", "oauth1a", "communiti", "if", "serial", "data", "extens", "a", "both", "great", "oauth2", "don", "customiz", "of", "document", "compani", "django", "larg", "huge", "function", "base", "functionbas", "regular", "t", "polici", "the", "make", "non", "orm", "nonorm", "usabl"], "created_on": "2014-02-07T18:43:04.916", "updated_on": null}}, {"pk": 5246388451409920, "model": "search.relationindex_blog_post_search_index", "fields": {"permalink": "Backbonejs", "user_id": 5785905063264256, "tags": ["backbone"], "text": "Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface. ", "title": "Backbone.js", "comments": null, "search_index_search_list_field": ["backbon", "js", "and", "all", "over", "bind", "it", "exist", "api", "event", "web", "function", "with", "custom", "to", "json", "collect", "rich", "event", "give", "view", "model", "backbon", "connect", "js", "applic", "declar", "interfac", "enumer", "by", "structur", "a", "handl", "key", "valu", "keyvalu", "of", "your", "provid", "rest"], "created_on": "2014-02-09T16:45:48.140", "updated_on": null}}, {"pk": 6090813381541888, "model": "search.relationindex_blog_post_search_index", "fields": {"permalink": "djangoappengine", "user_id": 5785905063264256, "tags": ["django"], "text": "Djangoappengine contains App Engine backends for Django-nonrel, e.g. the database and email backends. In addition we provide a testapp which contains minimal settings for running Django-nonrel on App Engine. Use it as a starting point if you want to use App Engine as your database for Django-nonrel.", "title": "djangoappengine", "comments": null, "search_index_search_list_field": ["djangoappengin", "and", "point", "app", "it", "as", "want", "in", "djangoappengin", "your", "if", "use", "for", "addit", "django", "nonrel", "djangononrel", "contain", "to", "backend", "which", "you", "email", "minim", "engin", "we", "run", "testapp", "a", "on", "e", "g", "databas", "set", "provid", "the", "start"], "created_on": "2014-02-09T16:52:02.329", "updated_on": null}}, {"pk": 4876402788663296, "model": "blog.post", "fields": {"permalink": "Django_REST_Framework", "user_id": 5785905063264256, "tags": ["django"], "text": "Django REST framework is a powerful and flexible toolkit that makes it easy to build Web APIs.\n\nSome reasons you might want to use REST framework:\n\n    The Web browseable API is a huge usability win for your developers.\n    Authentication policies including OAuth1a and OAuth2 out of the box.\n    Serialization that supports both ORM and non-ORM data sources.\n    Customizable all the way down - just use regular function-based views if you don't need the more powerful features.\n    Extensive documentation, and great community support.\n    Used and trusted by large companies such as Mozilla and Eventbrite.\n", "title": "Django REST Framework", "comments": null, "created_on": "2014-02-07T18:43:04.916", "updated_on": null}}, {"pk": 5246388451409920, "model": "blog.post", "fields": {"permalink": "Backbonejs", "user_id": 5785905063264256, "tags": ["backbone"], "text": "Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface. ", "title": "Backbone.js", "comments": null, "created_on": "2014-02-09T16:45:48.140", "updated_on": null}}, {"pk": 6090813381541888, "model": "blog.post", "fields": {"permalink": "djangoappengine", "user_id": 5785905063264256, "tags": ["django"], "text": "Djangoappengine contains App Engine backends for Django-nonrel, e.g. the database and email backends. In addition we provide a testapp which contains minimal settings for running Django-nonrel on App Engine. Use it as a starting point if you want to use App Engine as your database for Django-nonrel.", "title": "djangoappengine", "comments": null, "created_on": "2014-02-09T16:52:02.329", "updated_on": null}}, {"pk": 4587025072128000, "model": "blog.comment", "fields": {"text": "Third comment", "created_on": "2014-02-07T09:30:19.828", "author": "Author object"}}, {"pk": 4657393816305664, "model": "blog.comment", "fields": {"text": "Submit comment", "created_on": "2014-02-06T20:41:18.175", "author": "Author object"}}, {"pk": 4938868793016320, "model": "blog.comment", "fields": {"text": "Second test comment.", "created_on": "2014-02-07T09:29:13.141", "author": "Author object"}}, {"pk": 5149975025549312, "model": "blog.comment", "fields": {"text": "Test", "created_on": "2014-02-07T10:17:13.918", "author": "Author object"}}, {"pk": 5220343769726976, "model": "blog.comment", "fields": {"text": "Test comment", "created_on": "2014-02-07T09:26:43.222", "author": "Author object"}}, {"pk": 5361081258082304, "model": "blog.comment", "fields": {"text": "Test", "created_on": "2014-02-06T20:07:43.744", "author": "Author object"}}, {"pk": 5501818746437632, "model": "blog.comment", "fields": {"text": "Second test comment.", "created_on": "2014-02-07T09:29:24.425", "author": "Author object"}}, {"pk": 5642556234792960, "model": "blog.author", "fields": {"name": "Test", "email": "t@test.com"}}, {"pk": 5712924978970624, "model": "blog.author", "fields": {"name": "John", "email": "john@example.org"}}, {"pk": 5783293723148288, "model": "blog.author", "fields": {"name": "Yeray", "email": "foo@email.com"}}, {"pk": 5924031211503616, "model": "blog.author", "fields": {"name": "Test", "email": "t@test.com"}}, {"pk": 6064768699858944, "model": "blog.author", "fields": {"name": "Yeray", "email": "foo@bar.com"}}, {"pk": 6205506188214272, "model": "blog.author", "fields": {"name": "Test", "email": "t@test.com"}}, {"pk": 6323566249246720, "model": "blog.author", "fields": {"name": "Yeray", "email": "yeraydiazdiaz@gmail.com"}}, {"pk": 6346243676569600, "model": "blog.author", "fields": {"name": "Yeray", "email": "foo@bar.com"}}, {"pk": 6486981164924928, "model": "blog.author", "fields": {"name": "Yeray", "email": "yeray@kancer.com"}}, {"pk": 6627718653280256, "model": "blog.author", "fields": {"name": "Yeray", "email": "foo@bar.com"}}]