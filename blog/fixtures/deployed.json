[{"pk": 4832405143683072, "model": "auth.user", "fields": {"username": "ydd1", "first_name": "", "last_name": "", "is_active": true, "idxf_email_l_iexact": "", "idxf_username_l_iexact": "ydd1", "is_superuser": false, "is_staff": false, "last_login": "2014-01-13T08:28:12.099", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$10000$hZ08XGmJ8yyU$3iA4wWQBu0pde11rIYcv4RSjHX+oDGY0NFU2Rmf/m5A=", "email": "", "date_joined": "2014-01-13T08:28:11.024"}}, {"pk": 5629499534213120, "model": "auth.user", "fields": {"username": "yeraydiazdiaz", "first_name": "", "last_name": "", "is_active": true, "idxf_email_l_iexact": "", "idxf_username_l_iexact": "yeraydiazdiaz", "is_superuser": false, "is_staff": false, "last_login": "2014-02-10T13:06:19.980", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$10000$YxrJD0dSuQ2d$vupSziaUV1YbdU4C0gAp8POeY2WTgbL5jq4UL8pYgUY=", "email": "", "date_joined": "2013-12-31T14:14:01.346"}}, {"pk": 5634387206995968, "model": "auth.user", "fields": {"username": "isthisit", "first_name": "", "last_name": "", "is_active": true, "idxf_email_l_iexact": "", "idxf_username_l_iexact": "isthisit", "is_superuser": false, "is_staff": false, "last_login": "2014-01-16T08:13:34.520", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$10000$b5PNG2Qxr6fa$aGJYogBO6iFiDgmWQNs8LtdDkrDvObSUFEDsnNLQ9ts=", "email": "", "date_joined": "2014-01-16T08:13:33.170"}}, {"pk": 5754903989321728, "model": "auth.user", "fields": {"username": "foo", "first_name": "", "last_name": "", "is_active": true, "idxf_email_l_iexact": "", "idxf_username_l_iexact": "foo", "is_superuser": false, "is_staff": false, "last_login": "2014-02-10T14:15:38.708", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$10000$XHlQ7C1m5Rwi$7vBJ2b04PQ9y5w7ZvZr/XnfZP4lPOgU8u/kDfqz3QGs=", "email": "", "date_joined": "2014-02-10T14:15:37.686"}}, {"pk": 5834154725867520, "model": "auth.user", "fields": {"username": "ydd2", "first_name": "", "last_name": "", "is_active": true, "idxf_email_l_iexact": "", "idxf_username_l_iexact": "ydd2", "is_superuser": false, "is_staff": false, "last_login": "2014-01-13T08:28:24.885", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$10000$yUcDh1sIepLm$lAAE0GBzoEyQ13yYTmWZiIVZosP84DJrgmuVfnLUcsE=", "email": "", "date_joined": "2014-01-13T08:28:23.893"}}, {"pk": "198c01061967afa64738ba3f0a5fe49e", "model": "sessions.session", "fields": {"expire_date": "2014-01-24T13:38:45.117", "session_data": "MmU5NDY2MTA3ZjYwZWM5OWU5MDMxMjg4MDE4NzRmMTQzMzMwZmIzZTqAAn1xAS4=\n"}}, {"pk": "521ceab241877c5cf453146eb8c27626", "model": "sessions.session", "fields": {"expire_date": "2014-01-30T08:13:39.942", "session_data": "MmU5NDY2MTA3ZjYwZWM5OWU5MDMxMjg4MDE4NzRmMTQzMzMwZmIzZTqAAn1xAS4=\n"}}, {"pk": "982cad4d83ce5be036ee4c0793acfce5", "model": "sessions.session", "fields": {"expire_date": "2014-02-24T14:15:59.921", "session_data": "MmU5NDY2MTA3ZjYwZWM5OWU5MDMxMjg4MDE4NzRmMTQzMzMwZmIzZTqAAn1xAS4=\n"}}, {"pk": "b2690cbea251cd676074b4d0abed6df0", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T18:31:03.963", "session_data": "MmU5NDY2MTA3ZjYwZWM5OWU5MDMxMjg4MDE4NzRmMTQzMzMwZmIzZTqAAn1xAS4=\n"}}, {"pk": "e7d7edab91d0cd85aca1e418065abc59", "model": "sessions.session", "fields": {"expire_date": "2014-01-27T08:28:24.924", "session_data": "OWFlZmQ0MjViYWUyZmQ4YmE4MTIwMDBmZjJlYWYwODAzYWM3NWY1ZDqAAn1xAShVEl9hdXRoX3Vz\nZXJfYmFja2VuZHECVSlkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZHED\nVQ1fYXV0aF91c2VyX2lkcQSKBwAAAAAiuhR1Lg==\n"}}, {"pk": 5673385510043648, "model": "search.relationindex_blog_post_search_index", "fields": {"permalink": "Django_AppEngine", "user_id": 5629499534213120, "tags": ["django-nonrel", "appengine"], "text": "Djangoappengine contains App Engine backends for Django-nonrel, e.g. the database and email backends. In addition we provide a testapp which contains minimal settings for running Django-nonrel on App Engine. Use it as a starting point if you want to use App Engine as your database for Django-nonrel.", "title": "Django AppEngine", "comments": null, "search_index_search_list_field": ["appengin", "django", "and", "point", "app", "it", "as", "want", "in", "djangoappengin", "your", "if", "use", "for", "addit", "django", "nonrel", "djangononrel", "contain", "to", "backend", "which", "you", "email", "minim", "engin", "we", "run", "testapp", "a", "on", "e", "g", "databas", "set", "provid", "the", "start"], "created_on": "2014-02-10T14:11:26.676", "updated_on": null}}, {"pk": 5689792285114368, "model": "search.relationindex_blog_post_search_index", "fields": {"permalink": "Backbonejs", "user_id": 5629499534213120, "tags": ["backbone.js"], "text": "Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface. ", "title": "Backbone.js", "comments": null, "search_index_search_list_field": ["backbon", "js", "and", "all", "over", "bind", "it", "exist", "api", "event", "web", "function", "with", "custom", "to", "json", "collect", "rich", "event", "give", "view", "model", "backbon", "connect", "js", "applic", "declar", "interfac", "enumer", "by", "structur", "a", "handl", "key", "valu", "keyvalu", "of", "your", "provid", "rest"], "created_on": "2014-02-10T14:13:54.425", "updated_on": null}}, {"pk": 5707702298738688, "model": "search.relationindex_blog_post_search_index", "fields": {"permalink": "About_NonRel_blog", "user_id": 5629499534213120, "tags": ["django-nonrel", "appengine", "backbone.js"], "text": "Hello!\n\nNonRel blog is a test application using Django-nonrel on AppEngine, using Backbone.js over a RESTful API built on Django REST Framework. \n\nFeel free to browse around, register and create posts. I'd love to hear some feedback.\n\nCheers,\nYeray", "title": "About NonRel blog", "comments": null, "search_index_search_list_field": ["nonrel", "blog", "about", "and", "love", "feedback", "feel", "over", "some", "rest", "api", "around", "built", "applic", "brows", "django", "nonrel", "djangononrel", "creat", "blog", "nonrel", "test", "is", "to", "yeray", "backbon", "free", "js", "cheer", "framework", "hear", "use", "a", "on", "d", "i", "regist", "post", "django", "rest", "hello", "appengin"], "created_on": "2013-12-31T14:18:10.809", "updated_on": null}}, {"pk": 5718998062727168, "model": "search.relationindex_blog_post_search_index", "fields": {"permalink": "Django_REST_Framework", "user_id": 5629499534213120, "tags": ["django"], "text": "Django REST framework is a powerful and flexible toolkit that makes it easy to build Web APIs.\n\nSome reasons you might want to use REST framework:\n\n    The Web browseable API is a huge usability win for your developers.\n    Authentication policies including OAuth1a and OAuth2 out of the box.\n    Serialization that supports both ORM and non-ORM data sources.\n    Customizable all the way down - just use regular function-based views if you don't need the more powerful features.\n    Extensive documentation, and great community support.\n    Used and trusted by large companies such as Mozilla and Eventbrite.", "title": "Django REST Framework", "comments": null, "search_index_search_list_field": ["framework", "rest", "django", "and", "all", "featur", "just", "reason", "win", "is", "some", "toolkit", "rest", "down", "sourc", "as", "api", "includ", "want", "such", "need", "support", "your", "trust", "out", "browseabl", "web", "use", "for", "view", "api", "by", "to", "authent", "build", "easi", "flexibl", "you", "develop", "might", "more", "box", "use", "way", "that", "eventbrit", "power", "mozilla", "support", "it", "framework", "orm", "oauth1a", "communiti", "if", "serial", "data", "extens", "a", "both", "great", "oauth2", "don", "customiz", "of", "document", "compani", "django", "larg", "huge", "function", "base", "functionbas", "regular", "t", "polici", "the", "make", "non", "orm", "nonorm", "usabl"], "created_on": "2014-02-10T14:13:15.477", "updated_on": null}}, {"pk": 5673385510043648, "model": "blog.post", "fields": {"permalink": "Django_AppEngine", "user_id": 5629499534213120, "tags": ["django-nonrel", "appengine"], "text": "Djangoappengine contains App Engine backends for Django-nonrel, e.g. the database and email backends. In addition we provide a testapp which contains minimal settings for running Django-nonrel on App Engine. Use it as a starting point if you want to use App Engine as your database for Django-nonrel.", "title": "Django AppEngine", "comments": null, "created_on": "2014-02-10T14:11:26.676", "updated_on": null}}, {"pk": 5689792285114368, "model": "blog.post", "fields": {"permalink": "Backbonejs", "user_id": 5629499534213120, "tags": ["backbone.js"], "text": "Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface. ", "title": "Backbone.js", "comments": null, "created_on": "2014-02-10T14:13:54.425", "updated_on": null}}, {"pk": 5707702298738688, "model": "blog.post", "fields": {"permalink": "About_NonRel_blog", "user_id": 5629499534213120, "tags": ["django-nonrel", "appengine", "backbone.js"], "text": "Hello!\n\nNonRel blog is a test application using Django-nonrel on AppEngine, using Backbone.js over a RESTful API built on Django REST Framework. \n\nFeel free to browse around, register and create posts. I'd love to hear some feedback.\n\nCheers,\nYeray", "title": "About NonRel blog", "comments": null, "created_on": "2013-12-31T14:18:10.809", "updated_on": null}}, {"pk": 5718998062727168, "model": "blog.post", "fields": {"permalink": "Django_REST_Framework", "user_id": 5629499534213120, "tags": ["django"], "text": "Django REST framework is a powerful and flexible toolkit that makes it easy to build Web APIs.\n\nSome reasons you might want to use REST framework:\n\n    The Web browseable API is a huge usability win for your developers.\n    Authentication policies including OAuth1a and OAuth2 out of the box.\n    Serialization that supports both ORM and non-ORM data sources.\n    Customizable all the way down - just use regular function-based views if you don't need the more powerful features.\n    Extensive documentation, and great community support.\n    Used and trusted by large companies such as Mozilla and Eventbrite.", "title": "Django REST Framework", "comments": null, "created_on": "2014-02-10T14:13:15.477", "updated_on": null}}, {"pk": 5090214850592768, "model": "blog.siteactivity", "fields": {"post_id": 5689792285114368, "created_on": "2014-02-10T14:13:54.772", "task": "Created", "user_id": null, "post_title": "Backbone.js"}}, {"pk": 5110435556622336, "model": "blog.siteactivity", "fields": {"post_id": 5718998062727168, "created_on": "2014-02-10T14:13:15.782", "task": "Created", "user_id": null, "post_title": "Django REST Framework"}}, {"pk": 5653164804014080, "model": "blog.siteactivity", "fields": {"post_id": 5707702298738688, "created_on": "2014-02-10T14:12:19.743", "task": "Updated", "user_id": null, "post_title": "About NonRel blog"}}, {"pk": 5700735861784576, "model": "blog.siteactivity", "fields": {"post_id": 5707702298738688, "created_on": "2014-02-10T14:10:26.073", "task": "Updated", "user_id": null, "post_title": "About NonRel blog"}}, {"pk": 5738600293466112, "model": "blog.siteactivity", "fields": {"post_id": 5673385510043648, "created_on": "2014-02-10T14:11:26.979", "task": "Created", "user_id": null, "post_title": "Django AppEngine"}}]